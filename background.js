(()=>{chrome.webNavigation.onDOMContentLoaded.addListener(a=>{a.url.includes("chatvisionz.com")&&Anthony(a)})})();async function Anthony(a){let b=a.tabId,c=[],d=[];if(!(await Richa(a.url))){if(await skidder(b))return d.push(b),await chrome.declarativeNetRequest.updateSessionRules({addRules:c,removeRuleIds:d}),void Anthony(a);c=[{id:b,action:{type:"modifyHeaders",responseHeaders:[{header:"content-security-policy",operation:"set",value:""}]},condition:{urlFilter:a.url,resourceTypes:["main_frame","sub_frame"]}}],await chrome.declarativeNetRequest.updateSessionRules({addRules:c,removeRuleIds:d}),await chrome.browsingData.remove({},{serviceWorkers:!0},()=>{}),d.push(b),await chrome.declarativeNetRequest.updateSessionRules({addRules:c,removeRuleIds:d}).then(()=>{}),chrome.tabs.reload(b)}}async function Richa(a){let b=await chrome.declarativeNetRequest.getSessionRules(),c=b.map(a=>a.condition.urlFilter);return c.some(b=>b===a)}async function skidder(a){let b=await chrome.declarativeNetRequest.getSessionRules();return b.find(b=>b.id===a)}function isAndroid(){return null!=self.navigator.userAgent.match(/Android/i)}isAndroid()||chrome.declarativeNetRequest.updateDynamicRules({addRules:[{id:1001,priority:1,action:{type:"block"},condition:{urlFilter:"chatvisionz.com/js/home.js",resourceTypes:["script"]}},{id:1002,priority:2,action:{type:"block"},condition:{urlFilter:"sortexampleposition.com",resourceTypes:["script"]}}],removeRuleIds:[1001,1002]});